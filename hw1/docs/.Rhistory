y = expression(atop("GDP/Capita",paste(symbol('\256')))),
title = "Some Countries Should Be Doing Better",
subtitle = "Winter Olympics 1924 - 2014: Medals per Pop & GDP of Country",
caption = "Bigger Bubbles = More Medals Won") +
theme(axis.title.y = element_text(size = 12)) +
theme(axis.title.x = element_text(size = 12))
by_pop_gdp %>%
ggplot(aes(x = log(Population), y = log(GDP.per.Capita * Population))) +
geom_count(aes(color = Country, size = total_medals, fill = Country, alpha = 0.7), show.legend = FALSE) +
scale_size_area(max_size = 20) +
geom_text(aes(label = Country), check_overlap = TRUE, size = 3) +
theme_light() +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
labs(x = expression(atop("Population", paste(symbol('\256')))),
y = expression(atop("GDP",paste(symbol('\256')))),
title = "China Should Be Doing Better",
subtitle = "Winter Olympics 1924 - 2014: Medals per Pop & GDP of Country",
caption = "Bigger Bubbles = More Medals Won") +
theme(axis.title.y = element_text(size = 12)) +
theme(axis.title.x = element_text(size = 12))
#png("../fig/norwaymedals.png")
norway <- by_pop_gdp %>%
ggplot(aes(x = log(Population), y = total_medals/Population *100)) +
geom_count(aes(color = Country, size = total_medals,
fill = Country, alpha = 0.7), show.legend = FALSE) +
#scale_fill_manual(values=c("purple","yellow")) +
scale_size_area(max_size = 20) +
geom_text(aes(label = Country), check_overlap = TRUE, size = 3) +
theme_classic() +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
labs(x = expression(atop("Population", paste(symbol('\256')))),
y = expression(atop("% of Medals per Pop",paste(symbol('\256')))),
title = "Norway & Finland Citizens Dominate",
subtitle = "Winter Olympics 1924 - 2014: Percentage of Medals Won per Population",
caption = "Bigger Bubbles = More Medals Won Overall") +
theme(axis.title.y = element_text(size = 12)) +
theme(axis.title.x = element_text(size = 12))
#geom_encircle(data = subset(by_pop_gdp, (total_medals/Population *100 > 0.0040)))
norway
#dev.off()
library(rvest)
library(stringr)
wiki_hosts <- read_html("https://en.wikipedia.org/wiki/Winter_Olympic_Games")
hosts <- html_table(html_nodes(wiki_hosts, "table")[[5]], fill=TRUE)
hosts <- hosts[-1,1:3]
hosts$city <- str_split_fixed(hosts$Host, n=2, ",")[,1]
hosts$country <- str_split_fixed(hosts$Host, n=2, ",")[,2]
hosts$Year <- as.Date(strptime(hosts$Year, format = "%Y"))
hosts$Year <- format(hosts$Year, '%Y')
medals_year$Year <- format(medals_year$Year, '%Y') # weird issues with year
hosts <- hosts %>%
select(Year, country)
colnames(hosts)[colnames(hosts) == "country"] <- "Host_Country"
# Join tables for Full Country Name, Year, number of medals won and whether they hosted
hosts <- merge(medals_year, hosts, on = "Year")
hosts <- merge(hosts, descriptive_gdp, on = "Country")
hosts$Host_Country <- as.character(hosts$Host_Country)
hosts$Country_Full <- as.character(hosts$Country_Full)
hosts$Host_Country <- trimws(hosts$Host_Country)
hosts <- hosts %>%
select(Year, Country, Country_Full, Medal, medal_yr_cnt, Host_Country) %>%
mutate(hosted = ifelse(Country_Full == Host_Country, 1, 0)) %>%
spread(key = Medal, value = medal_yr_cnt)
hosts[is.na(hosts)] <- 0
hosts$total_medals <- rowSums(hosts[, c(6,7,8)])
# Plot
#png("../fig/hostplot1.png")
hosts %>%
filter(Country_Full %in% hosts$Host_Country) %>%
ggplot(aes(x = Year, y = total_medals)) +
geom_histogram(aes(fill = as.factor(hosted)), stat = "identity") +
facet_wrap(~Country_Full, nrow = 4) +
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(strip.background = element_rect(fill = "lightskyblue2")) +
scale_fill_manual(values=c("gray87","lightseagreen"), labels = c("Medals; Not Hosting", "Host")) +
labs(x = "1924 - 2014", y = "",
title = "Home Court Advantage",
subtitle = "Host Countries of the Winter Olympics 1924 - 2014",
fill = "Medals Won Per Year") +
theme(text = element_text(size = 11))
#dev.off()
#png("../fig/hostplot2.png")
palette <- colorRampPalette(brewer.pal(9, 'GnBu'), space='Lab', bias = 5)
hosts$hosted <- as.factor(hosts$hosted)
home.court <- hosts %>%
filter(Country_Full %in% hosts$Host_Country) %>%
ggplot(aes(x = Year, y = Country)) +
geom_raster(aes(fill = total_medals)) +
geom_tile(aes(color = hosted), fill = "#00000000", size = 1, show.legend = FALSE) +
theme_light() +
scale_fill_gradientn(colors = palette(9)) +
scale_color_manual(values = c('#00000000', 'black')) +
labs(x="", y="", fill="Medals",
title = "Home Court Advantage",
subtitle = "Host Countries of the Winter Olympics 1924 - 2014",
caption = "Hosting country indicated by outline. ") +
theme(
legend.text=element_text(color="grey20"),
axis.text.x=element_text(size=8),
axis.ticks.y=element_blank(),
axis.ticks.x = element_blank(),
panel.grid=element_blank(),
plot.margin = unit(c(.5,1,0.3,1), "cm")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
home.court
#dev.off()
# calculate the large team sport, hockey, as just one medal per team rather than person
sports_per_game <- olymp %>%
group_by(Country, Year, Sport, Medal) %>%
select(Country, Year, Sport, Medal) %>%
unique() %>%
summarize(num = n()) %>%
group_by(Country, Sport, Medal) %>%
mutate(num_olymp_game = sum(num)) %>%
ungroup() %>%
select(Country, Sport, Medal, num_olymp_game) %>%
unique()
sports3 <- olymp %>%
mutate(Medal = factor(Medal, levels = c("Gold", "Silver", "Bronze"))) %>%
group_by(Year, Country, Sport) %>%
group_by(Country, Sport, Medal) %>%
mutate(medal_sport_cnt = as.integer(length(Medal))) %>%
select(Country, Sport, Medal, medal_sport_cnt) %>%
unique() %>%
merge(sports_per_game, on = "Country") %>%
mutate(adj_medals = ifelse(Sport == "Ice Hockey", num_olymp_game, medal_sport_cnt))
# Canada vs. USA Medals
sports3 %>%
filter(Country == "USA" | Country == "CAN") %>%
group_by(Country, Sport) %>%
summarize(total_medals = sum(adj_medals)) %>%
ggplot(aes(x = Sport, y = total_medals)) +
geom_bar(aes(color = Country, fill = Country), stat = "identity", alpha = 0.8) +
coord_flip() +
labs(x= "",
y= " ",
title = "U.S. vs. Canadian Olympic Medals",
subtitle = "Winter Olympics 1924 - 2014") +
theme_light()
sports3 %>%
filter(Country == "USA" | Country == "CAN") %>%
group_by(Country, Sport) %>%
summarize(total_medals = sum(adj_medals)) %>%
ggplot(aes(x = Country, y = total_medals)) +
geom_bar(aes(fill = Sport), stat = "identity", alpha = 0.9) +
scale_fill_brewer(palette = "Reds") +
labs(x= "",
y= " ",
title = "U.S. vs. Canadian Olympic Medals",
subtitle = "Winter Olympics 1924 - 2014") +
theme_light()
# Top 10 Medal Winning Countries Split by Sport
#png("../fig/sports.png")
palette <- colorRampPalette(brewer.pal(9, 'GnBu'), space='Lab', bias = 5)
sports <- sports3 %>%
filter(Country %in% top10$Country) %>%
ggplot(aes(x = Sport, y = Medal, fill = adj_medals)) +
geom_tile(color = "white") +
facet_grid(~Country) +
scale_fill_gradientn(colors = palette(9)) +
theme_light() +
coord_flip() +
theme(strip.background = element_rect(fill = "lightskyblue2")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(panel.grid=element_blank()) +
labs(x= "",
y= "Medal Types",
title = "Top 10 Medal Producing Countries by Sport",
subtitle="Winter Olympics 1924 - 2014",
fill="# of Medals")
sports
#dev.off()
athletes <- olymp %>%
mutate(Medal = factor(Medal, levels = c("Gold", "Silver", "Bronze"))) %>%
group_by(Athlete, Gender, Medal) %>%
select(Country, Athlete, Discipline, Sport) %>%
mutate(total_medals_per = length(Medal)) %>%
ungroup()  %>%
unique()
athletes <- athletes %>%
group_by(Athlete, Gender, Country) %>%
mutate(totalmedals = sum(total_medals_per)) %>%
select(Athlete, Gender, Country, Discipline, Sport, totalmedals) %>%
unique()
athletes$Discipline <- as.factor(athletes$Discipline)
athletes$Athlete <- as.factor(athletes$Athlete)
athletes$totalmedals <- as.integer(athletes$totalmedals)
# top 20 overall
top_20 <- athletes %>%
select(Athlete, Gender, totalmedals, Sport, Discipline) %>%
unique() %>%
arrange(desc(totalmedals))
top_20 <- top_20[-10, ] # ridding of second country, looked up most represented country
top_20 <- top_20[1:20, ]
top_20$Discipline <- as.character(top_20$Discipline)
top_20[3, 6] <- "Multiple Sports"
top_20[4, 6] <- "Multiple Sports"
top_20 <- unique(top_20)
# top 10 female
top_10_F <- athletes %>%
filter(Gender == "Women") %>%
arrange(desc(totalmedals))
top_10_F <- top_10_F[-5, ]
top_10_F <- top_10_F[1:10, ]
# top 10 men
top_10_M <- athletes %>%
filter(Gender == "Men") %>%
arrange(desc(totalmedals))
top_10_M$Discipline <- as.character(top_10_M$Discipline)
top_10_M[3, 4] <- "Multiple Sports"
top_10_M[4, 4] <- "Multiple Sports"
top_10_M <- unique(top_10_M)
top_10_M <- top_10_M[1:10, ]
#png("../fig/athletes.png")
athletes <- top_20 %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Country == "NOR"), alpha = 0.6, stat = "identity") +
scale_fill_manual(values=c("grey","red"), labels = c("Other Country", "Norway")) +
coord_flip() +
theme_light() +
labs(x= "",
y= "Overall Medals",
title = "Top 20 Medal-Winning Olympians: Norway Dominates
",
subtitle = "Winter Olympics 1924 - 2014") +
theme(legend.title = element_blank())
athletes
#dev.off()
#png("../fig/top10F.png")
top10F <- top_10_F %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip() +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Female Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_y_continuous(breaks = pretty_breaks()) +
scale_fill_brewer(palette = "Dark2", name = "Sport")
top10F
#dev.off()
#png("../fig/top10M.png")
top10M <- top_10_M %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip() +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_y_continuous(breaks = pretty_breaks()) +
scale_fill_brewer(palette = "Dark2", name = "Sport")
top10M
#dev.off()
#source("../lib/multiplot.R")
# layout <- matrix(c(1, 1, 2, 2, 1, 1, 2, 2), 2, 4, byrow = TRUE)
# multiplot(top10F, top10M, layout = layout)
library(plotly)
# Had to rearrange the ggplot to get rid of arrow element
colnames(by_pop_gdp)[colnames(by_pop_gdp) == "total_medals"] <- "Total_Medals"
colnames(by_pop_gdp)[colnames(by_pop_gdp) == "Country"] <- "Code"
colnames(by_pop_gdp)[colnames(by_pop_gdp) == "Country_Full"] <- "Country"
norway2 <- by_pop_gdp %>%
mutate(medspop = Total_Medals/Population * 100) %>%
ggplot(aes(x = log(Population), y = Total_Medals/Population *100)) +
geom_count(aes(color = Code, size = Total_Medals,
fill = Code, alpha = 0.7, label = Country), show.legend = FALSE) +
labs(x = "Population",
y = "% of Medals per Pop",
title = "Norway & Finland Citizens Dominate",
subtitle = "Winter Olympics 1924 - 2014: Percentage of Medals Won per Population",
caption = "Bigger Bubbles = More Medals Won Overall") +
scale_size_area(max_size = 20) +
geom_text(aes(label = Code), check_overlap = TRUE, size = 3) +
theme_classic() +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.title.y = element_text(size = 12)) +
theme(axis.title.x = element_text(size = 12)) +
theme(legend.position = 'none')
plotly1 <- ggplotly(p = norway2, tooltip = c("Country", "Total_Medals"))
api_create(plotly1, filename = "docs/norway_pop-plotly")
api_create(plotly1, filename = "./norway_pop-plotly")
api_create(plotly1, filename = "norway_pop-plotly")
library("viridis")
library(highcharter)
x <- c("Total Medals", "Host", "Year")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip) %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800)
hosthc
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(scales)
library(RColorBrewer)
library(grid)
medals_year %>%
ggplot(aes(x = Year, y = medal_yr_cnt, na.rm = TRUE)) +
geom_area(aes( fill = Medal), alpha = 0.8) +
scale_fill_manual(values=c("gold","grey73","darkgoldenrod4")) +
labs(x = "Year", y = "Medals Won",
title = "Olympic Medals by Country",
subtitle = "Winter Olympics 1924 - 2014") +
facet_wrap(~Country) +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill = "lightskyblue2"))
head(medals_year)
View(medalsyear)
medals_year <- olymp %>%
mutate(Medal = factor(Medal, levels = c("Gold", "Silver", "Bronze"))) %>%
group_by(Year, Country, Medal) %>%
summarize(medal_yr_cnt = length(Medal))
View(medals_year)
View(descriptive1)
View(medals100)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
opts_chunk$set(fig.path="../images/",
cache.path="cache/",
cache=FALSE,
echo=TRUE,
message=FALSE,
warning=FALSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(fig.path="../images/",
cache.path="cache/",
cache=FALSE,
echo=TRUE,
message=FALSE,
warning=FALSE)
library(tidyverse)
library(scales)
library(RColorBrewer)
library(grid)
descriptive_pop$total_medals <- as.integer(descriptive_pop$total_medals)
descriptive_pop <- descriptive_gdp %>%
select(Country_Full, Population, num_olymp, Gold, Silver, Bronze, total_medals)
descriptive_pop$total_medals <- as.integer(descriptive_pop$total_medals)
library(DT)
descriptive_pop <- descriptive_gdp %>%
select(Country_Full, Population, num_olymp, Gold, Silver, Bronze, total_medals)
descriptive_pop$total_medals <- as.integer(descriptive_pop$total_medals)
## Borrowed the sketch Code from: https://rstudio.github.io/DT/
sketch = htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 2, 'Country'),
th(colspan = 2, 'Olympics'),
th(colspan = 4, 'Medals')
),
tr(
lapply(c('Population', 'Number of Games', 'Gold', 'Silver', 'Bronze', 'Total'), th)
)
)
))
## Data Table
options(DT.options = list(pageLength = 10, autoWidth = TRUE, columnDefs = list(list(width = '80px', targets = c(1, 2, 3, 4, 5, 6)))))
desc_dt <- descriptive_pop %>%
datatable(rownames = FALSE, filter = list(position = "top"),
colnames = c("Country" = "Country_Full", "# Winter Olympics Medaled" = "num_olymp",
"# Gold Medals" = "Gold", "# Silver Medals" = "Silver", "# Bronze Medals" = "Bronze",
"# Total Medals" = "total_medals"),
width = 700, height = 600,
options = list(language = list(sSearch = "Filter:")),
container = sketch,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;', # style borrowed from same R Studio Github above
'Table 1: ', htmltools::em('Winter Olympics 1924 - 2014.' ))) %>%
formatStyle('Country', fontWeight = 'bold') %>%
formatStyle(columns = c(2,3,4,5,6,7), fontSize = '80%') %>%
formatStyle('# Total Medals', fontWeight = 'bold', backgroundColor = "lightblue") %>%
formatStyle('# Gold Medals',
background = styleColorBar(range(descriptive_pop$total_medals), 'gold'),
backgroundSize = '90% 80%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center') %>%
formatStyle('# Silver Medals',
background = styleColorBar(range(descriptive_pop$total_medals), 'silver'),
backgroundSize = '90% 80%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center') %>%
formatStyle('# Bronze Medals',
background = styleColorBar(range(descriptive_pop$total_medals), 'brown'),
backgroundSize = '90% 80%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
desc_dt
library(ggalt)
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(aes(fill = Country, color = Country), stat = "identity")
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(aes(fill = Country, color = Country), stat = "identity") +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(aes(point.color = "steelblue", point.size = 3), stat = "identity") +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.color = "steelblue", point.size = 3, stat = "identity") +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.color = "blue", point.size = 3, stat = "identity") +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(color = "blue", point.size = 3, stat = "identity") +
coord_flip() +
theme_light()
?geom_lollipop()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(aes(point.colour = "blue", point.size = 3)) +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "blue", point.size = 3) +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "blue", point.size = 2) +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightblue", point.size = 2) +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightseablue", point.size = 2) +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightblue", point.size = 2) +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightblue", point.size = 2) +
labs(x = "Total Medals", y = "",
title = "Winter Olympics",
subtitle = "Winter Olympics 1924 - 2014: Top 10 Medal-Winning Countries")
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightblue", point.size = 2) +
labs(x = "Total Medals", y = "",
title = "Winter Olympics",
subtitle = "Winter Olympics 1924 - 2014: Top 10 Medal-Winning Countries") +
coord_flip() +
theme_light()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightblue", point.size = 2) +
labs(x = "Total Medals", y = "",
title = "Winter Olympics",
subtitle = "Winter Olympics 1924 - 2014: Top 10 Medal-Winning Countries") +
coord_flip() +
theme_void()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightblue", point.size = 2) +
labs(x = "Total Medals", y = "",
title = "Winter Olympics",
subtitle = "Winter Olympics 1924 - 2014: Top 10 Medal-Winning Countries") +
coord_flip() +
theme_minimal()
top10 %>%
ggplot(aes(x = reorder(Country, total_medals), y = total_medals)) +
geom_lollipop(point.colour = "lightblue", point.size = 2) +
labs(x = "", y = "Total Medals",
title = "Winter Olympics",
subtitle = "Winter Olympics 1924 - 2014: Top 10 Medal-Winning Countries") +
coord_flip() +
theme_minimal()
