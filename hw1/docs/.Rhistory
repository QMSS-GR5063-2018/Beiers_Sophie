top_10_M$Discipline <- as.character(top_10_M$Discipline)
top_10_M[3, 4] <- "Multiple Sports"
top_10_M[4, 4] <- "Multiple Sports"
top_10_M <- unique(top_10_M)
top_10_M <- top_10_M[1:10, ]
#png("../fig/athletes.png")
athletes <- top_20 %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Country == "NOR"), alpha = 0.6, stat = "identity") +
scale_fill_manual(values=c("grey","red"), labels = c("Other Country", "Norway")) +
coord_flip() +
theme_light() +
labs(x= "",
y= "Overall Medals",
title = "Top 20 Medal-Winning Olympians: Norway Dominates
",
subtitle = "Winter Olympics 1924 - 2014") +
theme(legend.title = element_blank())
athletes
#png("../fig/top10F.png")
top10F <- top_10_F %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip() +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Female Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_y_continuous(breaks = pretty_breaks()) +
scale_fill_brewer(palette = "Dark2", name = "Sport")
top10F
#png("../fig/top10M.png")
top10M <- top_10_M %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip() +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_y_continuous(breaks = pretty_breaks()) +
scale_fill_brewer(palette = "Dark2", name = "Sport")
top10M
#dev.off()
#source("../lib/multiplot.R")
# layout <- matrix(c(1, 1, 2, 2, 1, 1, 2, 2), 2, 4, byrow = TRUE)
# multiplot(top10F, top10M, layout = layout)
library(plotly)
# Had to rearrange the ggplot to get rid of arrow element
colnames(by_pop_gdp)[colnames(by_pop_gdp) == "total_medals"] <- "Total_Medals"
colnames(by_pop_gdp)[colnames(by_pop_gdp) == "Country"] <- "Code"
colnames(by_pop_gdp)[colnames(by_pop_gdp) == "Country_Full"] <- "Country"
norway2 <- by_pop_gdp %>%
mutate(medspop = Total_Medals/Population * 100) %>%
ggplot(aes(x = log(Population), y = Total_Medals/Population *100)) +
geom_count(aes(color = Code, size = Total_Medals,
fill = Code, alpha = 0.7, label = Country), show.legend = FALSE) +
labs(x = "Population",
y = "% of Medals per Pop",
title = "Norway & Finland Citizens Dominate",
subtitle = "Winter Olympics 1924 - 2014: Percentage of Medals Won per Population",
caption = "Bigger Bubbles = More Medals Won Overall") +
scale_size_area(max_size = 20) +
geom_text(aes(label = Code), check_overlap = TRUE, size = 3) +
theme_classic() +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.title.y = element_text(size = 12)) +
theme(axis.title.x = element_text(size = 12)) +
theme(legend.position = 'none')
plotly1 <- ggplotly(p = norway2, tooltip = c("Country", "Total_Medals"))
plotly1
#api_create(plotly1, filename = "norway_pop-plotly")
#library("viridis")
library(highcharter)
x <- c("Total Medals ", "Host", "Year")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_xAxis(
title = list(text = ""), gridLineWidth = 0.5)
#labels = list(format = "{value: %b}"))
hosthc
library(DT)
descriptive_pop <- descriptive_gdp %>%
select(Country_Full, Population, num_olymp, Gold, Silver, Bronze, total_medals)
descriptive_pop$total_medals <- as.integer(descriptive_pop$total_medals)
## Borrowed the sketch Code from: https://rstudio.github.io/DT/
sketch = htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 2, 'Country'),
th(colspan = 2, 'Olympics'),
th(colspan = 4, 'Medals')
),
tr(
lapply(c('Population', 'Number of Games', 'Gold', 'Silver', 'Bronze', 'Total'), th)
)
)
))
## Data Table
options(DT.options = list(pageLength = 10, autoWidth = TRUE, columnDefs = list(list(width = '80px', targets = c(1, 2, 3, 4, 5, 6)))))
desc_dt <- descriptive_pop %>%
datatable(rownames = FALSE, filter = list(position = "top"),
colnames = c("Country" = "Country_Full", "# Winter Olympics Medaled" = "num_olymp",
"# Gold Medals" = "Gold", "# Silver Medals" = "Silver",
"# Bronze Medals" = "Bronze",
"# Total Medals" = "total_medals"),
width = 700, height = 600,
options = list(language = list(sSearch = "Filter:")),
container = sketch,
caption = htmltools::tags$caption(
# style borrowed from same R Studio Github above
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Winter Olympics 1924 - 2014.' ))) %>%
formatStyle('Country', fontWeight = 'bold') %>%
formatStyle(columns = c(2,3,4,5,6,7), fontSize = '80%') %>%
formatStyle('# Total Medals', fontWeight = 'bold', backgroundColor = "lightblue") %>%
formatStyle('# Gold Medals',
background = styleColorBar(range(descriptive_pop$total_medals), 'gold'),
backgroundSize = '90% 80%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center') %>%
formatStyle('# Silver Medals',
background = styleColorBar(range(descriptive_pop$total_medals), 'silver'),
backgroundSize = '90% 80%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center') %>%
formatStyle('# Bronze Medals',
background = styleColorBar(range(descriptive_pop$total_medals), 'brown'),
backgroundSize = '90% 80%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
desc_dt
#library("viridis")
library(highcharter)
x <- c("Total Medals ", "Host", "Year")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_xAxis(
title = list(text = ""), gridLineWidth = 0.5)
#labels = list(format = "{value: %b}"))
hosthc
#library("viridis")
library(highcharter)
x <- c("Total Medals ", "Host", "Year")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_xAxis(
title = list(text = "Country"), gridLineWidth = 0.5)
#labels = list(format = "{value: %b}"))
hosthc
x <- c("Total Medals ", "Host", "Year")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_yAxis(
title = list(text = "Country"), gridLineWidth = 0.5)
#labels = list(format = "{value: %b}"))
hosthc
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_yAxis(
title = list(text = "Country"))
hosthc
#library("viridis")
library(highcharter)
x <- c("Total Medals: ", "Host: ", "Year: ")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_yAxis(
title = list(text = "Country", gridLineWidth = 0.5))
hosthc
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "logarithmic") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
#library("viridis")
library(highcharter)
x <- c("Total Medals: ", "Host: ", "Year: ")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "columnrange") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 800) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "columnrange") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_subtitle(text = "Winter Olympics 1924 - 2014: Host Country Performance") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 500) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5)) %>%
hc_xAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "columnrange") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_subtitle(text = "Winter Olympics 1924 - 2014: Host Country Performance") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 500, width = 600) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5)) %>%
hc_xAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "columnrange") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_subtitle(text = "Winter Olympics 1924 - 2014: Host Country Performance") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 500, width = 700) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5)) %>%
hc_xAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "columnrange") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_subtitle(text = "Winter Olympics 1924 - 2014: Host Country Performance") %>%
hc_legend(layout = "horizontal", horizontalAlign = "top",
align = "bottom", valueDecimals = 0) %>%
hc_size(height = 500, width = 700) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5)) %>%
hc_xAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "columnrange") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_subtitle(text = "Winter Olympics 1924 - 2014: Host Country Performance") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 500, width = 600) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5)) %>%
hc_xAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
#png("../fig/hostplot1.png")
hosts %>%
filter(Country_Full %in% hosts$Host_Country) %>%
ggplot(aes(x = Year, y = total_medals)) +
geom_histogram(aes(fill = as.factor(hosted)), stat = "identity") +
facet_wrap(~Country_Full, nrow = 4) +
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(strip.background = element_rect(fill = "lightskyblue2")) +
scale_fill_manual(values=c("gray87","lightseagreen"), labels = c("Medals; Not Hosting", "Host")) +
labs(x = expression(atop("1924 - 2014", paste(symbol('\256')))),
y = "",
title = "Home Court Advantage",
subtitle = "Host Countries of the Winter Olympics 1924 - 2014",
fill = "Medals Won Per Year") +
theme(text = element_text(size = 11))
top10M <- top_10_M %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 20)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
#scale_y_continuous(breaks = pretty_breaks()) +
scale_fill_brewer(palette = "Dark2", name = "Sport")
top10M
top10F <- top_10_F %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 15)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Female Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_y_continuous(breaks = pretty_breaks()) +
scale_fill_brewer(palette = "Dark2", name = "Sport")
top10F
#png("../fig/top10M.png")
top10M <- top_10_M %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 15)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
#scale_y_continuous(breaks = pretty_breaks()) +
scale_fill_brewer(palette = "Dark2", name = "Sport")
top10M
athletes %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 15)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_fill_brewer(palette = "Dark2", name = "Sport") +
facet_wrap(~Gender, scales = "free")
athletes <- olymp %>%
mutate(Medal = factor(Medal, levels = c("Gold", "Silver", "Bronze"))) %>%
group_by(Athlete, Gender, Medal) %>%
select(Country, Athlete, Discipline, Sport) %>%
mutate(total_medals_per = length(Medal)) %>%
ungroup()  %>%
unique()
athletes <- athletes %>%
group_by(Athlete, Gender, Country) %>%
mutate(totalmedals = sum(total_medals_per)) %>%
select(Athlete, Gender, Country, Discipline, Sport, totalmedals) %>%
unique()
athletes$Discipline <- as.factor(athletes$Discipline)
athletes$Athlete <- as.factor(athletes$Athlete)
athletes$totalmedals <- as.integer(athletes$totalmedals)
athletes %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 15)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_fill_brewer(palette = "Dark2", name = "Sport") +
facet_wrap(~Gender, scales = "free")
top_20 <- athletes %>%
select(Athlete, Gender, totalmedals, Sport, Discipline) %>%
unique() %>%
arrange(desc(totalmedals))
top_20 <- top_20[-10, ] # ridding of second country, looked up most represented country
top_20 <- top_20[1:20, ]
top_20$Discipline <- as.character(top_20$Discipline)
top_20[3, 6] <- "Multiple Sports"
top_20[4, 6] <- "Multiple Sports"
top_20 <- unique(top_20)
top_20 %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 15)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_fill_brewer(palette = "Dark2", name = "Sport") +
facet_wrap(~Gender, scales = "free")
top10M
top_20 %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 15)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_fill_brewer(palette = "Dark2", name = "Sport") +
facet_wrap(~Gender, scales = "free")
#library("viridis")
library(highcharter)
x <- c("Total Medals:  ", "Host: ", "Year: ")
y <- sprintf("{point.%s}", c("total_medals", "hosted", "Year"))
tltip <- tooltip_table(x, y)
hosts2 <- hosts %>%
filter(Country_Full %in% Host_Country)
hosts2$hosted <- ifelse(hosts2$hosted == 1, "Yes", "No")
hosthc <- hchart(hosts2, "heatmap", hcaes(x = Year, y = Country_Full, value = total_medals)) %>%
hc_colorAxis(stops = color_stops(10, (palette(10))),
type = "columnrange") %>%
hc_tooltip(useHTML = TRUE, pointFormat = tltip, headerFormat = '') %>%
hc_title(text = "Home Court Advantage") %>%
hc_subtitle(text = "Winter Olympics 1924 - 2014: Host Country Performance") %>%
hc_legend(layout = "vertical", verticalAlign = "top",
align = "right", valueDecimals = 0) %>%
hc_size(height = 500, width = 600) %>%
hc_yAxis(
title = list(text = "", gridLineWidth = 0.5)) %>%
hc_xAxis(
title = list(text = "", gridLineWidth = 0.5))
hosthc
top_20 %>%
ggplot(aes(reorder(x = Athlete, totalmedals), y = totalmedals)) +
geom_bar(aes(fill = Discipline), alpha = 0.7, stat = "identity") +
coord_flip(ylim = c(0, 15)) +
theme_light() +
theme(legend.position = "bottom") +
labs(x= "",
y= "Total Medals",
title = "Top 10 Male & Female Medal-Winning Olympians",
subtitle = "Winter Olympics 1924 - 2014") +
scale_fill_brewer(palette = "Dark2", name = "Sport") +
theme(strip.background = element_rect(fill = "lightskyblue2")) +
facet_wrap(~Gender, scales = "free")
#source("../lib/multiplot.R")
# layout <- matrix(c(1, 1, 2, 2, 1, 1, 2, 2), 2, 4, byrow = TRUE)
# multiplot(top10F, top10M, layout = layout)
